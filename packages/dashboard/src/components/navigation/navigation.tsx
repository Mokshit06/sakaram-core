/* eslint-disable @next/next/no-img-element */
import useWindow, { AppType } from '@/hooks/use-window';
import { useEffect, useRef } from 'react';
import SpeechRecognition, {
  useSpeechRecognition,
} from 'react-speech-recognition';
import styles from './navigation.module.css';

export default function Navigation() {
  const { listening, resetTranscript } = useSpeechRecognition();
  const openApp = useWindow(state => state.openApp);
  const iconRef = useRef<HTMLImageElement | null>(null);

  useEffect(() => {
    if (listening) {
      const animation = iconRef.current?.animate(
        {
          transform: 'rotate(360deg)',
        },
        {
          duration: 3000,
          fill: 'forwards',
          iterations: Infinity,
        }
      );

      // animation?.finished.then(() => {
      //   if (iconRef.current) {
      //     iconRef.current.style.transform = 'rotate(360deg)';
      //   }
      // });

      return () => {
        animation?.cancel();
      };
    }
  }, [listening]);

  return (
    <div className={styles.nav}>
      <div className={styles.icons}>
        {/* eslint-disable-next-line @next/next/no-img-element */}
        <img
          className={`${styles.voice}`}
          ref={iconRef}
          onClick={() => {
            if (listening) {
              SpeechRecognition.stopListening();
              resetTranscript();
              return;
            }

            SpeechRecognition.startListening();
          }}
          src="/voice-icon.png"
          height={60}
          width={60}
          alt=""
        />
        <button
          onClick={() => {
            openApp(AppType.SPOTIFY);
          }}
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            height="70"
            width="70"
            viewBox="-33.4974 -55.829 290.3108 334.974"
          >
            <path
              d="M177.707 98.987c-35.992-21.375-95.36-23.34-129.719-12.912-5.519 1.674-11.353-1.44-13.024-6.958-1.672-5.521 1.439-11.352 6.96-13.029 39.443-11.972 105.008-9.66 146.443 14.936 4.964 2.947 6.59 9.356 3.649 14.31-2.944 4.963-9.359 6.6-14.31 3.653m-1.178 31.658c-2.525 4.098-7.883 5.383-11.975 2.867-30.005-18.444-75.762-23.788-111.262-13.012-4.603 1.39-9.466-1.204-10.864-5.8a8.717 8.717 0 015.805-10.856c40.553-12.307 90.968-6.347 125.432 14.833 4.092 2.52 5.38 7.88 2.864 11.968m-13.663 30.404a6.954 6.954 0 01-9.569 2.316c-26.22-16.025-59.223-19.644-98.09-10.766a6.955 6.955 0 01-8.331-5.232 6.95 6.95 0 015.233-8.334c42.533-9.722 79.017-5.538 108.448 12.446a6.96 6.96 0 012.31 9.57M111.656 0C49.992 0 0 49.99 0 111.656c0 61.672 49.992 111.66 111.657 111.66 61.668 0 111.659-49.988 111.659-111.66C223.316 49.991 173.326 0 111.657 0"
              // fill="#1ed660"
              fill="#fff"
            />
          </svg>
        </button>
        <h1
          style={{ cursor: 'pointer' }}
          onClick={() => openApp(AppType.BROWSER)}
        >
          <img src="/browser.png" height="40" width="40" alt="" />
        </h1>
        <h1 style={{ cursor: 'pointer' }}>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            x="0px"
            y="0px"
            width="50"
            height="50"
            viewBox="0 0 50 50"
            style={{ fill: '#fff' }}
          >
            <path d="M 14.5 4 C 11.479425 4 8.8081275 5.5957106 7.3066406 7.9824219 A 2.0002 2.0002 0 1 0 10.693359 10.111328 C 11.491873 8.8420395 12.880575 8 14.5 8 C 17.049111 8 19.063939 10.049201 18.998047 12.621094 C 18.935414 15.054236 16.747086 17 14.199219 17 L 5 17 A 2.0002 2.0002 0 1 0 5 21 L 14.199219 21 C 18.801352 21 22.87668 17.437514 22.998047 12.722656 C 23.120155 7.9565495 19.244889 4 14.5 4 z M 37 7 C 33.24811 7 29.954961 9.0827278 28.25 12.160156 A 2.0007172 2.0007172 0 1 0 31.75 14.099609 C 32.773039 12.253038 34.72389 11 37 11 C 40.461092 11 43.200084 13.849073 42.988281 17.373047 C 42.797712 20.543764 39.964974 23 36.6875 23 L 5 23 A 2.0002 2.0002 0 1 0 5 27 L 36.6875 27 C 41.976026 27 46.657038 22.994565 46.980469 17.613281 C 47.326666 11.853255 42.702908 7 37 7 z M 5 29 A 2.0002 2.0002 0 1 0 5 33 L 24.199219 33 C 26.747086 33 28.935414 34.945764 28.998047 37.378906 C 29.063939 39.950799 27.049111 42 24.5 42 C 22.880575 42 21.491873 41.157961 20.693359 39.888672 A 2.0002 2.0002 0 1 0 17.306641 42.017578 C 18.808127 44.404289 21.479425 46 24.5 46 C 29.244889 46 33.120155 42.043451 32.998047 37.277344 C 32.87668 32.562486 28.801352 29 24.199219 29 L 5 29 z"></path>
          </svg>
        </h1>
        <h1 style={{ cursor: 'pointer' }}>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            x="0px"
            y="0px"
            width="40"
            height="40"
            viewBox="0 0 172 172"
            style={{ fill: '#fff' }}
          >
            <g transform="">
              <g
                fill="none"
                fillRule="nonzero"
                stroke="none"
                strokeWidth="1"
                strokeLinecap="butt"
                strokeLinejoin="miter"
                strokeMiterlimit="10"
                strokeDasharray=""
                strokeDashoffset="0"
                fontFamily="none"
                fontWeight="none"
                fontSize="none"
                textAnchor="none"
                style={{ mixBlendMode: 'normal' }}
              >
                <path d="M0,172v-172h172v172z"></path>
                <g fill="#fff">
                  <path d="M150.24773,72.00493l-11.7992,-33.712c-3.2164,-9.1848 -11.9196,-15.3596 -21.6548,-15.3596h-61.58747c-9.7352,0 -18.4384,6.1748 -21.64907,15.35387l-11.7992,33.712c-6.30093,4.1452 -10.29133,11.30613 -10.29133,19.18373v40.68373c0,6.33533 5.13133,11.46667 11.46667,11.46667c6.33533,0 11.46667,-5.13133 11.46667,-11.46667v-7.22973c0,0 30.27773,1.4964 51.6,1.4964c21.32227,0 51.6,-1.4964 51.6,-1.4964v7.22973c0,6.33533 5.13133,11.46667 11.46667,11.46667c6.33533,0 11.46667,-5.13133 11.46667,-11.46667v-40.68373c0,-7.8776 -3.99613,-15.03853 -10.2856,-19.178zM37.81133,60.84787l6.5704,-18.77093c1.61107,-4.59813 5.9512,-7.67693 10.82453,-7.67693h61.58747c4.87333,0 9.21347,3.0788 10.82453,7.67693l6.5704,18.77093c1.032,2.95267 -1.4276,5.92827 -4.51787,5.42947c-11.24307,-1.81747 -25.6968,-3.21067 -43.6708,-3.21067c-17.974,0 -32.42773,1.3932 -43.6708,3.21067c-3.09027,0.4988 -5.54987,-2.4768 -4.51787,-5.42947zM37.26667,103.2c-4.7472,0 -8.6,-3.8528 -8.6,-8.6c0,-4.7472 3.8528,-8.6 8.6,-8.6c4.7472,0 8.6,3.8528 8.6,8.6c0,4.7472 -3.8528,8.6 -8.6,8.6zM103.2,97.46667h-34.4c-3.1648,0 -5.73333,-2.56853 -5.73333,-5.73333c0,-3.1648 2.56853,-5.73333 5.73333,-5.73333h34.4c3.1648,0 5.73333,2.56853 5.73333,5.73333c0,3.1648 -2.56853,5.73333 -5.73333,5.73333zM134.73333,103.2c-4.7472,0 -8.6,-3.8528 -8.6,-8.6c0,-4.7472 3.8528,-8.6 8.6,-8.6c4.7472,0 8.6,3.8528 8.6,8.6c0,4.7472 -3.8528,8.6 -8.6,8.6z"></path>
                </g>
              </g>
            </g>
          </svg>
        </h1>
      </div>
    </div>
  );
}
